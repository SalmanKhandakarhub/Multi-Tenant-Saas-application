version: '3.10'

services:
  postgres_db:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ft

  backend:
    container_name: src_container
    image: backend
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
    ports:
      - "8019:8019"
    depends_on:
      - postgres_db
    networks:
      - ft

  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - ft

  celery_worker:
    container_name: celery_worker
    build:
      context: .
    command: >
      poetry run watchmedo auto-restart --directory=./src --pattern="*.py" --recursive -- 
      ./start_celery.sh
    depends_on:
      - redis
      - backend
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - ft

  make_superuser:
    container_name: make_superuser_container
    image: make_superuser 
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - postgres_db
    entrypoint: ["poetry", "run", "python", "src/commands/create_super_admin.py"]
    networks:
      - ft

networks:
  ft:
    driver: bridge

volumes:
  postgres_data:
  src:
