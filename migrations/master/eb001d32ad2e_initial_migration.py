"""Initial migration

Revision ID: eb001d32ad2e
Revises: 
Create Date: 2024-10-15 13:24:23.519331

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb001d32ad2e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=False)
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(length=100), nullable=False),
    sa.Column('user_limit', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=5), nullable=False),
    sa.Column('max_discount_price', sa.DECIMAL(precision=10, scale=5), nullable=True),
    sa.Column('date_activated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_deactivated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_plans_id'), 'subscription_plans', ['id'], unique=False)
    op.create_index(op.f('ix_subscription_plans_plan_name'), 'subscription_plans', ['plan_name'], unique=False)
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host', sa.String(length=255), nullable=True),
    sa.Column('db_name', sa.String(length=255), nullable=True),
    sa.Column('organization_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('is_shared', sa.Boolean(), nullable=True),
    sa.Column('is_subscribed', sa.Boolean(), nullable=True),
    sa.Column('user_count', sa.BigInteger(), nullable=False),
    sa.Column('is_migrate', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_db_name'), 'tenants', ['db_name'], unique=False)
    op.create_index(op.f('ix_tenants_host'), 'tenants', ['host'], unique=False)
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_index(op.f('ix_tenants_organization_name'), 'tenants', ['organization_name'], unique=True)
    op.create_index(op.f('ix_tenants_user_count'), 'tenants', ['user_count'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('contact_no', sa.String(length=20), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='userstatus'), nullable=False),
    sa.Column('remember_token', sa.String(length=255), nullable=True),
    sa.Column('is_loggedin', sa.Boolean(), nullable=True),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('is_super_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_contact_no'), 'users', ['contact_no'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_first_name'), 'users', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_last_name'), 'users', ['last_name'], unique=False)
    op.create_table('forget_password',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.Integer(), nullable=True),
    sa.Column('otp_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reset_token', sa.String(), nullable=True),
    sa.Column('reset_token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forget_password_id'), 'forget_password', ['id'], unique=False)
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('subscription_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_product_id', sa.String(length=80), nullable=True),
    sa.Column('api_price_id', sa.String(length=80), nullable=True),
    sa.Column('environment', sa.Enum('PRODUCTION', 'STAGING', 'DEVELOPMENT', name='environmenttype'), server_default='PRODUCTION', nullable=False),
    sa.Column('billing_frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'YEARLY', 'DAILY', name='billingfrequencytype'), server_default='MONTHLY', nullable=False),
    sa.Column('subscription_plan_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_products_api_price_id'), 'subscription_products', ['api_price_id'], unique=False)
    op.create_index(op.f('ix_subscription_products_api_product_id'), 'subscription_products', ['api_product_id'], unique=False)
    op.create_index(op.f('ix_subscription_products_id'), 'subscription_products', ['id'], unique=False)
    op.create_table('tenant_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('stripe_id', sa.String(length=100), nullable=False),
    sa.Column('stripe_plan', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stripe_product', sa.String(length=100), nullable=False),
    sa.Column('stripe_webhook_status', sa.Integer(), nullable=True),
    sa.Column('stripe_plan_id', sa.String(length=100), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenant_subscriptions_id'), 'tenant_subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_tenant_subscriptions_name'), 'tenant_subscriptions', ['name'], unique=False)
    op.create_table('user_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_permissions_id'), 'user_permissions', ['id'], unique=False)
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_role')
    op.drop_index(op.f('ix_user_permissions_id'), table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index(op.f('ix_tenant_subscriptions_name'), table_name='tenant_subscriptions')
    op.drop_index(op.f('ix_tenant_subscriptions_id'), table_name='tenant_subscriptions')
    op.drop_table('tenant_subscriptions')
    op.drop_index(op.f('ix_subscription_products_id'), table_name='subscription_products')
    op.drop_index(op.f('ix_subscription_products_api_product_id'), table_name='subscription_products')
    op.drop_index(op.f('ix_subscription_products_api_price_id'), table_name='subscription_products')
    op.drop_table('subscription_products')
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_forget_password_id'), table_name='forget_password')
    op.drop_table('forget_password')
    op.drop_index(op.f('ix_users_last_name'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_first_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_contact_no'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tenants_user_count'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_organization_name'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_host'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_db_name'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_subscription_plans_plan_name'), table_name='subscription_plans')
    op.drop_index(op.f('ix_subscription_plans_id'), table_name='subscription_plans')
    op.drop_table('subscription_plans')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
