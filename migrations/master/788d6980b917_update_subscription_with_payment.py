"""update subscription with payment

Revision ID: 788d6980b917
Revises: 137c02d1be2e
Create Date: 2024-11-05 11:31:05.211223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '788d6980b917'
down_revision: Union[str, None] = '137c02d1be2e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discount_offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('PERCENTAGE', 'FLAT', name='discounttype'), nullable=False),
    sa.Column('discount_value', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('date_activated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_deactivated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discount_offers_id'), 'discount_offers', ['id'], unique=False)
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('module_name')
    )
    op.create_index(op.f('ix_modules_id'), 'modules', ['id'], unique=False)
    op.create_table('module_subscription_plans_association',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('subscription_plan_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plans.id'], ),
    sa.PrimaryKeyConstraint('module_id', 'subscription_plan_id')
    )
    op.create_table('module_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_plan_id', sa.Integer(), nullable=False),
    sa.Column('tenant_subscription_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('discount_offer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['discount_offer_id'], ['discount_offers.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['tenant_subscription_id'], ['tenant_subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_module_subscriptions_id'), 'module_subscriptions', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.Enum('JPY', 'CNY', 'KRW', 'THB', 'IDR', 'SGD', 'MYR', 'PHP', 'VND', 'INR', 'BDT', 'PKR', 'LKR', 'NPR', 'AED', 'SAR', 'QAR', 'KWD', 'BHD', 'OMR', 'ILS', 'LBP', 'EGP', 'JOD', 'YER', 'IQD', 'SYP', name='currencytype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('payment_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('amazon_order_reference_id', sa.String(length=100), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('card_last_four', sa.String(length=4), nullable=False),
    sa.Column('expiration_month', sa.Integer(), nullable=False),
    sa.Column('expiration_year', sa.Integer(), nullable=False),
    sa.Column('cardholder_name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.Column('tenant_subscription_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tenant_subscription_id'], ['tenant_subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.drop_index('ix_subscription_products_api_price_id', table_name='subscription_products')
    op.drop_index('ix_subscription_products_api_product_id', table_name='subscription_products')
    op.drop_index('ix_subscription_products_id', table_name='subscription_products')
    op.drop_table('subscription_products')
    op.add_column('subscription_plans', sa.Column('name', sa.String(length=100), nullable=False))
    op.add_column('subscription_plans', sa.Column('environment', sa.Enum('PRODUCTION', 'STAGING', 'DEVELOPMENT', name='environmenttype'), nullable=False))
    op.add_column('subscription_plans', sa.Column('billing_frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'HALFYEARLY', 'YEARLY', name='billingfrequencytype'), nullable=False))
    op.add_column('subscription_plans', sa.Column('discount_price', sa.DECIMAL(precision=10, scale=5), nullable=True))
    op.drop_index('ix_subscription_plans_plan_name', table_name='subscription_plans')
    op.create_index(op.f('ix_subscription_plans_name'), 'subscription_plans', ['name'], unique=False)
    op.drop_column('subscription_plans', 'plan_name')
    op.drop_column('subscription_plans', 'max_discount_price')
    op.add_column('tenant_subscriptions', sa.Column('subscription_plan_id', sa.Integer(), nullable=True))
    op.add_column('tenant_subscriptions', sa.Column('discount_offer_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'tenant_subscriptions', 'subscription_plans', ['subscription_plan_id'], ['id'])
    op.create_foreign_key(None, 'tenant_subscriptions', 'discount_offers', ['discount_offer_id'], ['id'])
    op.drop_column('tenant_subscriptions', 'stripe_product')
    op.drop_column('tenant_subscriptions', 'trial_ends_at')
    op.drop_column('tenant_subscriptions', 'stripe_plan_id')
    op.drop_column('tenant_subscriptions', 'quantity')
    op.drop_column('tenant_subscriptions', 'stripe_webhook_status')
    op.drop_column('tenant_subscriptions', 'ends_at')
    op.drop_column('tenant_subscriptions', 'stripe_plan')
    op.drop_column('tenant_subscriptions', 'stripe_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tenant_subscriptions', sa.Column('stripe_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('tenant_subscriptions', sa.Column('stripe_plan', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('tenant_subscriptions', sa.Column('ends_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('tenant_subscriptions', sa.Column('stripe_webhook_status', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tenant_subscriptions', sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tenant_subscriptions', sa.Column('stripe_plan_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('tenant_subscriptions', sa.Column('trial_ends_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('tenant_subscriptions', sa.Column('stripe_product', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'tenant_subscriptions', type_='foreignkey')
    op.drop_constraint(None, 'tenant_subscriptions', type_='foreignkey')
    op.drop_column('tenant_subscriptions', 'discount_offer_id')
    op.drop_column('tenant_subscriptions', 'subscription_plan_id')
    op.add_column('subscription_plans', sa.Column('max_discount_price', sa.NUMERIC(precision=10, scale=5), autoincrement=False, nullable=True))
    op.add_column('subscription_plans', sa.Column('plan_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_subscription_plans_name'), table_name='subscription_plans')
    op.create_index('ix_subscription_plans_plan_name', 'subscription_plans', ['plan_name'], unique=False)
    op.drop_column('subscription_plans', 'discount_price')
    op.drop_column('subscription_plans', 'billing_frequency')
    op.drop_column('subscription_plans', 'environment')
    op.drop_column('subscription_plans', 'name')
    op.create_table('subscription_products',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('api_product_id', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('api_price_id', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('environment', postgresql.ENUM('PRODUCTION', 'STAGING', 'DEVELOPMENT', name='environmenttype'), server_default=sa.text("'PRODUCTION'::environmenttype"), autoincrement=False, nullable=False),
    sa.Column('billing_frequency', postgresql.ENUM('MONTHLY', 'QUARTERLY', 'YEARLY', 'DAILY', name='billingfrequencytype'), server_default=sa.text("'MONTHLY'::billingfrequencytype"), autoincrement=False, nullable=False),
    sa.Column('subscription_plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_delete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plans.id'], name='subscription_products_subscription_plan_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subscription_products_pkey')
    )
    op.create_index('ix_subscription_products_id', 'subscription_products', ['id'], unique=False)
    op.create_index('ix_subscription_products_api_product_id', 'subscription_products', ['api_product_id'], unique=False)
    op.create_index('ix_subscription_products_api_price_id', 'subscription_products', ['api_price_id'], unique=False)
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_module_subscriptions_id'), table_name='module_subscriptions')
    op.drop_table('module_subscriptions')
    op.drop_table('module_subscription_plans_association')
    op.drop_index(op.f('ix_modules_id'), table_name='modules')
    op.drop_table('modules')
    op.drop_index(op.f('ix_discount_offers_id'), table_name='discount_offers')
    op.drop_table('discount_offers')
    # ### end Alembic commands ###
